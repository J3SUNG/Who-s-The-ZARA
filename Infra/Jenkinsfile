pipeline {
    agent any

    stages {
        stage('Merge Opened') {
            when {
                expression {env.STATE == 'opened' && env.DETAIL_MERGE_STATUS == 'mergeable'}
            }
            steps {
                script {
                    mattermostSend color: '#439FE0', message: "Deployment has been started. ${env.BUILD_URL}"
                }
                echo 'Merge is opened.'
                withCredentials([usernamePassword(credentialsId: 'withCredential', usernameVariable: 'USERNAME', passwordVariable: 'TOKEN')]) {
                    sh "git pull https://${USERNAME}:${TOKEN}@lab.ssafy.com/s09-webmobile1-sub2/S09P12D206.git ${env.SOURCE_BRANCH}"
                }
                sshagent (credentials: ['EC2-shell-script']) {
                    sh '''
                        ssh -o StrictHostKeyChecking=no ${TARGET_HOST} "
                        cd /var/lib/docker/volumes/jenkins_home/_data/workspace/chibbol/Infra
                        docker compose up -d
                        "
                    '''
                }
            }
        }
        stage('Merge Completed') {
            when {
                expression {env.STATE == 'merged'}
            }
            steps {
                script {
                    mattermostSend color: '#439FE0', message: "Deployment has been started. ${env.BUILD_URL}"
                }
                echo 'Merge is completed.'
                withCredentials([usernamePassword(credentialsId: 'withCredential', usernameVariable: 'USERNAME', passwordVariable: 'TOKEN')]) {
                    sh "git pull https://${USERNAME}:${TOKEN}@lab.ssafy.com/s09-webmobile1-sub2/S09P12D206.git master"
                }
                sshagent (credentials: ['EC2-shell-script']) {
                    sh '''
                        ssh -o StrictHostKeyChecking=no ${TARGET_HOST} "
                        cd /var/lib/docker/volumes/jenkins_home/_data/workspace/chibbol/Infra
                        docker compose up -d
                        "
                    '''
                }
            }
        }

    }

    post {
        success {
            script {
                mattermostSend color: 'good', message: "Deployment has been successful. ${env.BUILD_URL}"
            }
        }
        failure {
            script {
                mattermostSend color: 'danger', message: "Deployment has failed. ${env.BUILD_URL}"
            }
        }
    }
    environment {
        TARGET_HOST = "root@15.164.227.173"
    }
}
